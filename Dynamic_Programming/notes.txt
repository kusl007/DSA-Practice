knapack problem => vvi ==> include,exclude
solved in level=>3

*****************************************
distinct ways patterns
Level 4=>No of dice roll with target sum

*****************************************
level 5=> merging interval pattern its very important

*****************************************

This code is used to calculate maxim number in a range and can be fetched in 0(1) complexity ;
map< pair<int,int> , int> maxi;
        //pre-computation   
        for(int i=0;i<arr.size(); i++) {
            // pair<int,int> p;
            // p.first = i;
            // p.second=i;
            // maxi[p] = arr[i];

            maxi[{i,i}] = arr[i];
            for(int j=i+1; j<arr.size(); j++) {
                maxi[{i,j}] = max(arr[j], maxi[{i,j-1}]);
            }
        }


*****************************************
vvvvi ques
1.coin change
2.longest common subsequences => but uses other words
3.Longest increasing subsequences(Russian doll)
4.edit distance

